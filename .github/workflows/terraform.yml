name: "Terraform Infrastructure"

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  workflow_call:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Create terraform.tfvars
        working-directory: ./terraform
        run: |
          cp example/terraform.tfvars.example terraform.tfvars
          echo 'admin_password = "${{ secrets.TF_VAR_ADMIN_PASSWORD }}"' >> terraform.tfvars

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Get ACR details from Terraform output
        id: acr_details
        working-directory: ./terraform
        run: |
          ACR_NAME=$(terraform output -raw acr_name)
          ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)
          echo "acr_name=$ACR_NAME" >> $GITHUB_OUTPUT
          echo "acr_login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
            }
      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.acr_details.outputs.acr_login_server }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Build and push container image to ACR
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.acr_details.outputs.acr_login_server }}/pytest:${{ github.sha }}
          context: .

      - name: Get Container App details from Terraform output
        id: container_app_details
        working-directory: ./terraform
        run: |
          CONTAINER_APP_NAME=$(terraform output -raw container_app_name)
          RESOURCE_GROUP_NAME=$(terraform output -raw resource_group_name)
          echo "container_app_name=$CONTAINER_APP_NAME" >> $GITHUB_OUTPUT
          echo "resource_group_name=$RESOURCE_GROUP_NAME" >> $GITHUB_OUTPUT
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ steps.acr_details.outputs.acr_login_server }}/pytest:${{ github.sha }}
          resourceGroup: ${{ steps.container_app_details.outputs.resource_group_name }}
          containerAppName: ${{ steps.container_app_details.outputs.container_app_name }}

      - name: Get deployment URLs
        working-directory: ./terraform
        run: |
          CONTAINER_APP_URL=$(terraform output -raw container_app_url)
          VM_URL=$(terraform output -raw web_server_url)
          echo "üöÄ Container App deployed at: $CONTAINER_APP_URL"
          echo "üñ•Ô∏è VM available at: $VM_URL"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
